% Generated by roxygen2 (4.1.1): do not edit by hand
% Please edit documentation in R/whitelist.r
\name{find.forbidden.calls}
\alias{find.forbidden.calls}
\title{Returns a list of forbidden calls}
\usage{
find.forbidden.calls(call, wl.funs = NULL, wl.vars = NULL,
  wl.calls = NULL, bl.funs = NULL, bl.vars = NULL,
  check.white.list.res = NULL)
}
\arguments{
\item{call}{the call object}

\item{wl.funs}{a character vector of the function names that are allowed (whitelisted). If NULL ignored.}

\item{wl.vars}{a character vector of the variable names that are allowed (whitelisted). If NULL ignored.}

\item{wl.calls}{a named list of quoted calls that are allowed.
The list names should be the call names, i.e. call[[1]].
For example, one may not generally whitelist the function 'library'
(who knows what can happen if a library has functions with the
same name than some whitelisted function but different behavior)
Yet one may allow the explicit call
`library(dplyr)`. In this case, we could set
 wl.calls = alist(library=library(dplyr)).}

\item{bl.funs}{a character vector of the function names that are forbidden (blacklisted). If NULL ignored.}

\item{bl.vars}{a character vector of the variable names that are forbidden  (blacklisted). If NULL ignored.}

\item{check.white.list.res}{optional the returned object of a call to check.white.list. Can speed up find.forbidden.calls}
}
\description{
Returns a list of all subcalls of call that are forbidden given the provided
whitelists and blacklists. Usually, it suffices to simply call check.whitelist.
This function is slower, put may be helpful if the exact sources of the violations
want to be known.
}

\examples{\dontrun{
  call = quote({
    print(abs(-2*5*log(abs(-1))))
  })
  find.forbidden.calls(call, bl.funs=c("abs"), wl.calls = alist(abs=abs(-1)))

}}
